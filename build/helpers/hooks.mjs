import{getScopedState as e,makeScopedSpec as t}from"./scoped.mjs";function s(s,{useEvent:u,useLayoutEffect:a,useEffect:c,useRef:n,useState:r,useMemo:o,useReducer:d}){let p;return u||(u=e=>{const t=n(e);(a??c)((()=>{t.current=e}),[e]);const[s]=r((()=>(...e)=>t.current.apply(void 0,e)));return s}),o||(o=e=>e()),p=d?(e,t)=>{const[i,u]=d(s.update,e,t);return o((()=>({state:i,dispatch:u})),[i,u])}:(e,t=i)=>{const[u,a]=r((()=>t(e))),[c]=r((()=>e=>a((t=>s.update(t,e)))));return o((()=>({state:u,dispatch:c})),[u,c])},{useEvent:u,useJSONReducer:p,useWrappedJSONReducer([e,t]){const i=u(t),[a]=r((()=>e=>i((t=>s.update(t,e)))));return o((()=>({state:e,dispatch:a})),[e,a])},useScopedReducer({state:i,dispatch:a},c,{initialiseValue:n,initialisePath:r=void 0!==n}={}){const d=e(s,i,c,n),p=u((e=>a(t(c,e,{initialisePath:r,initialiseValue:n}))));return o((()=>({state:d,dispatch:p})),[d,p])}}}const i=e=>e;export{s as makeHooks};
